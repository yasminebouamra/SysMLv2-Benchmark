```sysmlv2
package VehicleMassRequirement {

	part def VehiclePart {
		attribute m : MassValue;
	}

	part def Vehicle :> VehiclePart;

	part vehicle : Vehicle {
		part engine : VehiclePart;
		part chassis : VehiclePart;
		attribute ::> m = ms.totalMass;
	}

	calc def MassSum {
		in partMasses : MassValue[0..*];
		return totalMass : MassValue = sum(partMasses);
	}

	calc ms: MassSum {
		in partMasses = (vehicle.engine.m, vehicle.chassis.m);
		return totalMass;
	}

	part vehicles[*] = (vehicle, vehicle);
	attribute masses1[*] = (vehicles as VehiclePart).m;
	attribute masses2[*] = (vehicles as vehicle).m;

	constraint massRequirement {
		in maxMass : MassValue;
		vehicle.m < maxMass;
	}

	constraint chassisMassRequirement {
		in chassisMaxMass : MassValue;
		vehicle.chassis.m < chassisMaxMass;
	}

	constraint engineMassRequirement {
		in engineMaxMass : MassValue;
		vehicle.engine.m < engineMaxMass;
	}
}
```