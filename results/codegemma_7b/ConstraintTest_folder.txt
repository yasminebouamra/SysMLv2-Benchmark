```sysmlv2
package VehicleMassManagement {
	private import ISQ::*;
	private import NumericalFunctions::*;

	part def VehiclePart {
		attribute m : MassValue;
	}

	part def Vehicle :> VehiclePart {
		attribute ::> m = ms.totalMass;
	}

	calc def MassSum {
		in partMasses : MassValue[0..*];
		return totalMass : MassValue = sum(partMasses);
	}

	calc ms: MassSum {
		in partMasses = (vehicle.eng.m, vehicle.trans.m);
		return totalMass;
	}

	part vehicle : Vehicle {
		part eng : VehiclePart;
		part trans : VehiclePart;
	}

	part vehicles[*] = (vehicle, vehicle);
	attribute masses1[*] = (vehicles as VehiclePart).m;
	attribute masses2[*] = (vehicles as vehicle).m;

	constraint vehicleMassConstraint {
		in vehicle : Vehicle;
		constraint totalMass = vehicle.m = ms.totalMass;
	}

	constraint massComparisonConstraint {
		in vehicle1 : Vehicle;
		in vehicle2 : Vehicle;
		constraint massDifference = vehicle1.m - vehicle2.m <= 100;
	}
}
```