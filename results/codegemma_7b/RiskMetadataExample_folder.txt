```sysmlv2
package RiskMetadataExample

private import Metaobjects::SemanticMetadata;
private import ModelingMetadata::*;
private import RiskMetadata::*;
private import RiskLevelEnum::*;

requirement def Goal;
requirement goals : Goal[*] nonunique;
metadata def goal :> SemanticMetadata {
    :>> baseType = goals meta SysML::RequirementUsage;
}

requirement <'1'> engineMassRequirement {
    doc /* The total mass of an engine shall be less than or equal to the required mass. */

    @StatusInfo {
        status = StatusKind::tbd;
        risk {
            totalRisk = high;
            technicalRisk = medium;
            scheduleRisk = low;
            costRisk = medium;
        }
        originator = "Bob";
        owner = "Mary";
    }
}

#goal requirement deliverPayload {
    assume #goal constraint payloadMassLimit;
    require #goal engineMassRequirement;
}
```